$date
	Sat Mar 04 15:39:44 2023
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end
$scope module tb_regfile $end
$scope module U1 $end
$var wire 1 ! my_regs [0][15] $end
$var wire 1 " my_regs [0][14] $end
$var wire 1 # my_regs [0][13] $end
$var wire 1 $ my_regs [0][12] $end
$var wire 1 % my_regs [0][11] $end
$var wire 1 & my_regs [0][10] $end
$var wire 1 ' my_regs [0][9] $end
$var wire 1 ( my_regs [0][8] $end
$var wire 1 ) my_regs [0][7] $end
$var wire 1 * my_regs [0][6] $end
$var wire 1 + my_regs [0][5] $end
$var wire 1 , my_regs [0][4] $end
$var wire 1 - my_regs [0][3] $end
$var wire 1 . my_regs [0][2] $end
$var wire 1 / my_regs [0][1] $end
$var wire 1 0 my_regs [0][0] $end
$var wire 1 1 my_regs [1][15] $end
$var wire 1 2 my_regs [1][14] $end
$var wire 1 3 my_regs [1][13] $end
$var wire 1 4 my_regs [1][12] $end
$var wire 1 5 my_regs [1][11] $end
$var wire 1 6 my_regs [1][10] $end
$var wire 1 7 my_regs [1][9] $end
$var wire 1 8 my_regs [1][8] $end
$var wire 1 9 my_regs [1][7] $end
$var wire 1 : my_regs [1][6] $end
$var wire 1 ; my_regs [1][5] $end
$var wire 1 < my_regs [1][4] $end
$var wire 1 = my_regs [1][3] $end
$var wire 1 > my_regs [1][2] $end
$var wire 1 ? my_regs [1][1] $end
$var wire 1 @ my_regs [1][0] $end
$var wire 1 A my_regs [2][15] $end
$var wire 1 B my_regs [2][14] $end
$var wire 1 C my_regs [2][13] $end
$var wire 1 D my_regs [2][12] $end
$var wire 1 E my_regs [2][11] $end
$var wire 1 F my_regs [2][10] $end
$var wire 1 G my_regs [2][9] $end
$var wire 1 H my_regs [2][8] $end
$var wire 1 I my_regs [2][7] $end
$var wire 1 J my_regs [2][6] $end
$var wire 1 K my_regs [2][5] $end
$var wire 1 L my_regs [2][4] $end
$var wire 1 M my_regs [2][3] $end
$var wire 1 N my_regs [2][2] $end
$var wire 1 O my_regs [2][1] $end
$var wire 1 P my_regs [2][0] $end
$var wire 1 Q my_regs [3][15] $end
$var wire 1 R my_regs [3][14] $end
$var wire 1 S my_regs [3][13] $end
$var wire 1 T my_regs [3][12] $end
$var wire 1 U my_regs [3][11] $end
$var wire 1 V my_regs [3][10] $end
$var wire 1 W my_regs [3][9] $end
$var wire 1 X my_regs [3][8] $end
$var wire 1 Y my_regs [3][7] $end
$var wire 1 Z my_regs [3][6] $end
$var wire 1 [ my_regs [3][5] $end
$var wire 1 \ my_regs [3][4] $end
$var wire 1 ] my_regs [3][3] $end
$var wire 1 ^ my_regs [3][2] $end
$var wire 1 _ my_regs [3][1] $end
$var wire 1 ` my_regs [3][0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
x!
x"
x#
x$
x%
x&
x'
x(
x)
x*
x+
x,
x-
x.
x/
x0
x1
x2
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
x>
x?
x@
xA
xB
xC
xD
xE
xF
xG
xH
xI
xJ
xK
xL
xM
xN
xO
xP
xQ
xR
xS
xT
xU
xV
xW
xX
xY
xZ
x[
x\
x]
x^
x_
x`
#5000
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
#15000
1!
1"
1#
1$
1-
1.
1/
10
#25000
14
1@
#35000
0!
0"
0#
0$
0-
0.
#55000
1A
1C
1M
1O
#65000
1Q
1S
1T
1]
1_
1`
